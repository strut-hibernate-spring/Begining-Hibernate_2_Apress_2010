<project name="criteria">

	<property file="build.properties" />
	<property name="src" location="src" />
	<property name="bin" location="bin" />
	<property name="sql" location="sql" />
   <property name="hibernate.tools"
      value="${hibernate.tools.home}${hibernate.tools.path}"/>
   <property name="hibernate.tools.lib"
      value="${hibernate.tools.home}${hibernate.tools.lib.path}"/>


   <path id="classpath.base">
      <pathelement location="${src}"/>
      <pathelement location="${bin}"/>
      <pathelement location="${slf4j.implementation.jar}"/>
      <pathelement location="${hibernate.home}/hibernate3.jar"/>
      <fileset dir="${hibernate.home}/lib" includes="**/*.jar"/>
      <pathelement location="${hsql.home}/lib/hsqldb.jar"/>
   </path>

   <path id="classpath.tools">
      <path refid="classpath.base"/>
      <pathelement
         location="${hibernate.tools.lib}/commons-logging-1.0.4.jar"/>
      <pathelement
         location="${hibernate.tools}/freemarker.jar"/>
      <pathelement
         location="${hibernate.tools}/hibernate-tools.jar"/>
   </path>

	<taskdef name="htools" classname="org.hibernate.tool.ant.HibernateToolTask" classpathref="classpath.tools" />

	<target name="exportDDL" depends="compile">
		<mkdir dir="${sql}" />
		<htools destdir="${sql}">
			<classpath refid="classpath.base" />
			<annotationconfiguration configurationfile="${src}/hibernate.cfg.xml" />
			<hbm2ddl create="true" drop="true" format="true" export="true" outputfilename="${ant.project.name}.dll" />
		</htools>
	</target>

	<target name="compile">
		<mkdir dir="bin" />
		<javac srcdir="${src}" destdir="${bin}" classpathref="classpath.base" />
	</target>

	<target name="populate" depends="exportDDL">
		<java classpathref="classpath.base" classname="com.hibernatebook.queries.CriteriaExample" fork="true">
			<arg value="populate" />
		</java>
	</target>

	<target name="SimpleCriteria" depends="compile">
		<java classpathref="classpath.base" classname="com.hibernatebook.queries.CriteriaExample" fork="true">
			<arg value="SimpleCriteria" />
		</java>
	</target>

	<target name="EqualsCriteria" depends="compile">
		<java classpathref="classpath.base" classname="com.hibernatebook.queries.CriteriaExample" fork="true">
			<arg value="EqualsCriteria" />
		</java>
	</target>

	<target name="NotEqualsCriteria" depends="compile">
		<java classpathref="classpath.base" classname="com.hibernatebook.queries.CriteriaExample" fork="true">
			<arg value="NotEqualsCriteria" />
		</java>
	</target>

	<target name="LikePatternCriteria" depends="compile">
		<java classpathref="classpath.base" classname="com.hibernatebook.queries.CriteriaExample" fork="true">
			<arg value="LikePatternCriteria" />
		</java>
	</target>

	<target name="ILikeMatchModeCriteria" depends="compile">
		<java classpathref="classpath.base" classname="com.hibernatebook.queries.CriteriaExample" fork="true">
			<arg value="ILikeMatchModeCriteria" />
		</java>
	</target>

	<target name="NullCriteria" depends="compile">
		<java classpathref="classpath.base" classname="com.hibernatebook.queries.CriteriaExample" fork="true">
			<arg value="NullCriteria" />
		</java>
	</target>

	<target name="GreaterThanCriteria" depends="compile">
		<java classpathref="classpath.base" classname="com.hibernatebook.queries.CriteriaExample" fork="true">
			<arg value="GreaterThanCriteria" />
		</java>
	</target>

	<target name="AndCriteria" depends="compile">
		<java classpathref="classpath.base" classname="com.hibernatebook.queries.CriteriaExample" fork="true">
			<arg value="AndCriteria" />
		</java>
	</target>

	<target name="OrCriteria" depends="compile">
		<java classpathref="classpath.base" classname="com.hibernatebook.queries.CriteriaExample" fork="true">
			<arg value="OrCriteria" />
		</java>
	</target>

	<target name="AndOrCriteria" depends="compile">
		<java classpathref="classpath.base" classname="com.hibernatebook.queries.CriteriaExample" fork="true">
			<arg value="AndOrCriteria" />
		</java>
	</target>

	<target name="DisjunctionCriteria" depends="compile">
		<java classpathref="classpath.base" classname="com.hibernatebook.queries.CriteriaExample" fork="true">
			<arg value="DisjunctionCriteria" />
		</java>
	</target>

	<target name="SQLCriteria" depends="compile">
		<java classpathref="classpath.base" classname="com.hibernatebook.queries.CriteriaExample" fork="true">
			<arg value="SQLCriteria" />
		</java>
	</target>

	<target name="PagingCriteria" depends="compile">
		<java classpathref="classpath.base" classname="com.hibernatebook.queries.CriteriaExample" fork="true">
			<arg value="PagingCriteria" />
		</java>
	</target>

	<target name="UniqueResultCriteria" depends="compile">
		<java classpathref="classpath.base" classname="com.hibernatebook.queries.CriteriaExample" fork="true">
			<arg value="UniqueResultCriteria" />
		</java>
	</target>

	<target name="UniqueResultExceptionCriteria" depends="compile">
		<java classpathref="classpath.base" classname="com.hibernatebook.queries.CriteriaExample" fork="true">
			<arg value="UniqueResultExceptionCriteria" />
		</java>
	</target>

	<target name="OrderCriteria" depends="compile">
		<java classpathref="classpath.base" classname="com.hibernatebook.queries.CriteriaExample" fork="true">
			<arg value="OrderCriteria" />
		</java>
	</target>

	<target name="OneToManyAssociationsCriteria" depends="compile">
		<java classpathref="classpath.base" classname="com.hibernatebook.queries.CriteriaExample" fork="true">
			<arg value="OneToManyAssociationsCriteria" />
		</java>
	</target>

	<target name="AssociationsSortingCriteria" depends="compile">
		<java classpathref="classpath.base" classname="com.hibernatebook.queries.CriteriaExample" fork="true">
			<arg value="AssociationsSortingCriteria" />
		</java>
	</target>

	<target name="ManyToOneAssociationsCriteria" depends="compile">
		<java classpathref="classpath.base" classname="com.hibernatebook.queries.CriteriaExample" fork="true">
			<arg value="ManyToOneAssociationsCriteria" />
		</java>
	</target>

	<target name="QBECriteria" depends="compile">
		<java classpathref="classpath.base" classname="com.hibernatebook.queries.CriteriaExample" fork="true">
			<arg value="QBECriteria" />
		</java>
	</target>

	<target name="NotNullOrZeroQBECriteria" depends="compile">
		<java classpathref="classpath.base" classname="com.hibernatebook.queries.CriteriaExample" fork="true">
			<arg value="NotNullOrZeroQBECriteria" />
		</java>
	</target>

	<target name="QBEAdvancedCriteria" depends="compile">
		<java classpathref="classpath.base" classname="com.hibernatebook.queries.CriteriaExample" fork="true">
			<arg value="QBEAdvancedCriteria" />
		</java>
	</target>

	<target name="RowCountCriteria" depends="compile">
		<java classpathref="classpath.base" classname="com.hibernatebook.queries.CriteriaExample" fork="true">
			<arg value="RowCountCriteria" />
		</java>
	</target>

	<target name="AggregatesCriteria" depends="compile">
		<java classpathref="classpath.base" classname="com.hibernatebook.queries.CriteriaExample" fork="true">
			<arg value="AggregatesCriteria" />
		</java>
	</target>

	<target name="ProjectionCriteria" depends="compile">
		<java classpathref="classpath.base" classname="com.hibernatebook.queries.CriteriaExample" fork="true">
			<arg value="ProjectionCriteria" />
		</java>
	</target>

	<target name="GroupByCriteria" depends="compile">
		<java classpathref="classpath.base" classname="com.hibernatebook.queries.CriteriaExample" fork="true">
			<arg value="GroupByCriteria" />
		</java>
	</target>

	<target name="DistinctCriteria" depends="compile">
		<java classpathref="classpath.base" classname="com.hibernatebook.queries.CriteriaExample" fork="true">
			<arg value="DistinctCriteria" />
		</java>
	</target>
	
</project>
